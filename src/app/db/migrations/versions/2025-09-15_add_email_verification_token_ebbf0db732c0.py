# type: ignore
"""add_email_verification_token

Revision ID: ebbf0db732c0
Revises: a1b2c3d4e5f6
Create Date: 2025-09-15 03:21:14.632454+00:00

"""
from __future__ import annotations

import warnings
from typing import TYPE_CHECKING

import sqlalchemy as sa
from alembic import op
from advanced_alchemy.types import EncryptedString, EncryptedText, GUID, ORA_JSONB, DateTimeUTC
from sqlalchemy import Text  # noqa: F401

if TYPE_CHECKING:
    from collections.abc import Sequence

__all__ = ["downgrade", "upgrade", "schema_upgrades", "schema_downgrades", "data_upgrades", "data_downgrades"]

sa.GUID = GUID
sa.DateTimeUTC = DateTimeUTC
sa.ORA_JSONB = ORA_JSONB
sa.EncryptedString = EncryptedString
sa.EncryptedText = EncryptedText

# revision identifiers, used by Alembic.
revision = 'ebbf0db732c0'
down_revision = 'a1b2c3d4e5f6'
branch_labels = None
depends_on = None


def upgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            schema_upgrades()
            data_upgrades()

def downgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            data_downgrades()
            schema_downgrades()

def schema_upgrades() -> None:
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('email_verification_token',
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('user_id', sa.GUID(length=16), nullable=False),
    sa.Column('token', sa.String(length=64), nullable=False),
    sa.Column('expires_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('is_used', sa.Boolean(), nullable=False),
    sa.Column('used_at', sa.DateTimeUTC(timezone=True), nullable=True),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user_account.id'], name=op.f('fk_email_verification_token_user_id_user_account'), ondelete='cascade'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_email_verification_token'))
    )
    with op.batch_alter_table('email_verification_token', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_email_verification_token_token'), ['token'], unique=True)
        batch_op.create_index(batch_op.f('ix_email_verification_token_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('agent_session', schema=None) as batch_op:
        batch_op.create_table_comment(
        'Agent conversation sessions',
        existing_comment=None
    )

    with op.batch_alter_table('session_message', schema=None) as batch_op:
        batch_op.create_table_comment(
        'Messages in agent conversation sessions',
        existing_comment=None
    )

    with op.batch_alter_table('user_usage_quota', schema=None) as batch_op:
        batch_op.alter_column('month_year',
               existing_type=sa.VARCHAR(length=7),
               comment='Month in YYYY-MM format',
               existing_nullable=False)
        batch_op.alter_column('usage_count',
               existing_type=sa.INTEGER(),
               comment='Number of agent requests made in this month',
               existing_nullable=False)

    # ### end Alembic commands ###

def schema_downgrades() -> None:
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_usage_quota', schema=None) as batch_op:
        batch_op.alter_column('usage_count',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Number of agent requests made in this month',
               existing_nullable=False)
        batch_op.alter_column('month_year',
               existing_type=sa.VARCHAR(length=7),
               comment=None,
               existing_comment='Month in YYYY-MM format',
               existing_nullable=False)

    with op.batch_alter_table('session_message', schema=None) as batch_op:
        batch_op.drop_table_comment(
        existing_comment='Messages in agent conversation sessions'
    )

    with op.batch_alter_table('agent_session', schema=None) as batch_op:
        batch_op.drop_table_comment(
        existing_comment='Agent conversation sessions'
    )

    with op.batch_alter_table('email_verification_token', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_email_verification_token_user_id'))
        batch_op.drop_index(batch_op.f('ix_email_verification_token_token'))

    op.drop_table('email_verification_token')
    # ### end Alembic commands ###

def data_upgrades() -> None:
    """Add any optional data upgrade migrations here!"""

def data_downgrades() -> None:
    """Add any optional data downgrade migrations here!"""
